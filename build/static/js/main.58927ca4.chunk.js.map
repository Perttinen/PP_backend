{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["printOneOrderLine","r","loadingDate","orderId","buildingSite","cadorKg","permaticKg","perfektKg","syntaxKg","ympyratKg","conceptKg","minisyntaxKg","formatKg","progressKg","printOneDayTotalWeightByMachineLine","day","data","allMachines","Cador","Permatic","Perfekt","Syntax","Ympyrät","Concept","MiniSyntax","Format","Progress","i","length","includes","Object","keys","className","Body","rivit","concat","Show","pData","formatData","width","newData","building_site","order_id","tempOrder","loading_date","undefined","cador_kg","Math","round","concept_kg","format_kg","manualShearKg","manual_shear_kg","minisyntax_kg","perf2Kg","perf2_kg","perfKg","perf_kg","permatic_kg","progress_kg","radiusBenderKg","radius_bender_kg","spiralKg","spiral_kg","syntax_kg","perf3Kg","perf3_kg","poydat","ympyrat","push","sort","a","b","replaceAll","App","useState","setData","useEffect","setInterval","axios","get","then","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58927ca4.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\n\n\nconst printOneOrderLine = (r) => {  \n  return( \n    <tr key={r.orderId+r.loadingDate}> \n      <td>{r.loadingDate}</td>\n      <td>{r.orderId}</td>                                         \n      <td>{r.buildingSite}</td>                                                \n      <td>{r.cadorKg}</td>\n      <td>{r.permaticKg}</td>\n      <td>{r.perfektKg}</td>\n      <td>{r.syntaxKg}</td>\n      <td>{r.ympyratKg}</td>\n      <td>{r.conceptKg}</td>                                           \n      <td>{r.minisyntaxKg}</td>\n      <td>{r.formatKg}</td>\n      <td>{r.progressKg}</td>\n    </tr>\n  )\n}\n\nconst printOneOrderLineNodate = (r) => {\n  return(\n    <tr key={r.orderId+r.loadingDate}> \n      <td>{''}</td>\n      <td>{r.orderId}</td>                                          \n      <td>{r.buildingSite}</td>                                              \n      <td>{r.cadorKg}</td>\n      <td>{r.permaticKg}</td>\n      <td>{r.perfektKg}</td>\n      <td>{r.syntaxKg}</td>\n      <td>{r.ympyratKg}</td>\n      <td>{r.conceptKg}</td>                                           \n      <td>{r.minisyntaxKg}</td>\n      <td>{r.formatKg}</td>\n      <td>{r.progressKg}</td>\n    </tr>\n  )\n}\n\nconst printOneDayTotalWeightByMachineLine = (day, data) => {\n  let allMachines = {Cador:null, Permatic:null, Perfekt:null, Syntax:null, Ympyrät:null, Concept:null, MiniSyntax:null, Format:null, Progress:null}\n  for(let i = 0; i<data.length; i++){\n    if(data[i].loadingDate.includes(day)){    \n        allMachines.Cador += data[i].cadorKg\n        allMachines.Permatic += data[i].permaticKg\n        allMachines.Perfekt += data[i].perfektKg\n        allMachines.Syntax += data[i].syntaxKg\n        allMachines.Ympyrät += data[i].ympyratKg\n        allMachines.Concept += data[i].conceptKg\n        allMachines.MiniSyntax += data[i].minisyntaxKg\n        allMachines.Format += data[i].formatKg\n        allMachines.Progress += data[i].progressKg\n    }\n  }\n  for(let i = 0; i < Object.keys(allMachines).length; i++){\n    if(allMachines[Object.keys(allMachines)[i]] === 0){\n      allMachines[Object.keys(allMachines)[i]] = null\n    }\n  }\n  return(\n    <tr className=\"sumLine\" key={day}> \n      <td>{''}</td>\n      <td>{''}</td>                                         \n      <td>{''}</td>                                                \n      <td>{allMachines.Cador}</td>\n      <td>{allMachines.Permatic}</td>\n      <td>{allMachines.Perfekt}</td>\n      <td>{allMachines.Syntax}</td>\n      <td>{allMachines.Ympyrät}</td>\n      <td>{allMachines.Concept}</td>                                           \n      <td>{allMachines.MiniSyntax}</td>\n      <td>{allMachines.Format}</td>\n      <td>{allMachines.Progress}</td>\n    </tr>\n  )\n}\n\nconst Body = ({data}) => {\n  let rivit = []\n  rivit[0] = printOneOrderLine(data[0])\n\n  for(let i = 1; i<data.length;i++){\n    if(data[i].loadingDate !== data[i-1].loadingDate){\n      rivit = rivit.concat(printOneDayTotalWeightByMachineLine(data[i-1].loadingDate, data))\n    }\n    if(data[i].loadingDate === data[i-1].loadingDate){\n    rivit = rivit.concat(printOneOrderLineNodate(data[i]))\n    }else{\n      rivit=rivit.concat(printOneOrderLine(data[i]))\n    }\n    if( i === data.length-1){\n      rivit = rivit.concat(printOneDayTotalWeightByMachineLine(data[i].loadingDate, data))\n    }\n  }\n  return rivit\n}\n\nconst Show = ({data}) => {\n  if(data.length>1){\n    const pData = formatData(data)\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th width=\"7%\">PVM</th><th width=\"7%\">Tilausnro</th><th width=\"15%\">Kohde</th><th>Cador</th><th>Tupla</th><th>Pöytä</th><th>Syntax</th>\n            <th>Ympyrät</th><th>Concept</th><th>Mini-Syntax</th><th>Format</th><th>Progress</th>   \n          </tr>\n        </thead>\n         <tbody>\n          <Body data={pData}/>\n         </tbody>\n      </table>\n    )\n  }\n  return 'Ladataan...'\n}\n\nconst formatData = (data) => {\n  if(data.length > 1){\n    let newData = []\n    for(let i = 0 ; i < data.length ; i++){\n      if(!(data[i].building_site === \"\" || data[i].order_id.includes('ai'))){ \n        let tempOrder = {\n          loadingDate: data[i].loading_date,\n          orderId: data[i].order_id,\n          buildingSite: data[i].building_site,\n          cadorKg: data[i].cador_kg === undefined ? null : data[i].cador_kg === 0 ? null : Math.round(data[i].cador_kg), \n          conceptKg: data[i].concept_kg === undefined ? null : data[i].concept_kg === 0 ? null : Math.round(data[i].concept_kg),\n          formatKg: data[i].format_kg === undefined ? null : data[i].format_kg === 0 ? null : Math.round(data[i].format_kg),\n          manualShearKg: data[i].manual_shear_kg === undefined ? null : data[i].manual_shear_kg === 0 ? null : Math.round(data[i].manual_shear_kg),\n          minisyntaxKg: data[i].minisyntax_kg === undefined ? null : data[i].minisyntax_kg === 0 ? null : Math.round(data[i].minisyntax_kg),\n          perf2Kg: data[i].perf2_kg === undefined ? null : data[i].perf2_kg === 0 ? null : Math.round(data[i].perf2_kg),\n          perfKg: data[i].perf_kg === undefined ? null : data[i].perf_kg === 0 ? null : Math.round(data[i].perf_kg),\n          permaticKg: data[i].permatic_kg === undefined ? null : data[i].permatic_kg === 0 ? null : Math.round(data[i].permatic_kg),\n          progressKg: data[i].progress_kg === undefined ? null : data[i].progress_kg === 0 ? null : Math.round(data[i].progress_kg),\n          radiusBenderKg: data[i].radius_bender_kg === undefined ? null : data[i].radius_bender_kg === 0 ? null : Math.round(data[i].radius_bender_kg),\n          spiralKg: data[i].spiral_kg === undefined ? null : data[i].spiral_kg === 0 ? null : Math.round(data[i].spiral_kg),\n          syntaxKg: data[i].syntax_kg === undefined ? null : data[i].syntax_kg === 0 ? null : Math.round(data[i].syntax_kg),\n          perf3Kg: data[i].perf3_kg === undefined ? null : data[i].perf3_kg === 0 ? null : Math.round(data[i].perf3_kg)\n        }\n        const poydat = tempOrder.perfKg + tempOrder.perf2Kg + tempOrder.perf3Kg\n        delete tempOrder['perfKg']\n        delete tempOrder['perf2Kg']\n        delete tempOrder['perf3Kg']\n        tempOrder.perfektKg = poydat === 0 ? null : poydat\n\n        const ympyrat = tempOrder.radiusBenderKg + tempOrder.spiralKg\n        delete tempOrder['radiusBenderKg']\n        delete tempOrder['spiralKg']\n        tempOrder.ympyratKg = ympyrat === 0 ? null : ympyrat\n\n        newData.push(tempOrder)\n      }\n    }\n    newData = newData.sort((a,b) => a.loadingDate.replaceAll('-','') - b.loadingDate.replaceAll('-',''))\n    return newData\n  }\n}\n\nconst App = () => {\n\n  const [data,setData] = useState([])\n\n  const url2 = 'http://s237-0075:3005/indalgo/management/optimizer/production_report.json'\n\n  useEffect(() => {\n    setInterval(() => {\n    axios\n    .get(url2)\n    .then(res =>{setData(res.data) \n      // console.log(new Date())\n          })\n    },20000)\n    }      \n  ,[])\n\n  return(\n    <div>\n      <h1>STEELNET</h1>\n      <Show data={data}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}