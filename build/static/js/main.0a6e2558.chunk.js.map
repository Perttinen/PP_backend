{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["printOneOrderLine","r","lDate","so","site","machines","Cador","Permatic","Perfekt","Syntax","Ympyrät","Concept","MiniSyntax","Format","Progress","printOneDayTotalWeightByMachineLine","day","data","allMachines","i","length","includes","c","Object","keys","className","Body","orderObjects","rivit","concat","Show","forEach","e","machine_name","order_id","loading_date","building_site","machine","weight_kg","sort","a","b","replaceAll","createOrderObjects","width","App","useState","setData","useEffect","setInterval","axios","get","then","res","console","log","Date","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a6e2558.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nconst printOneOrderLine = (r) => {\n  return( \n    <tr key={r.so}> \n      <td>{r.lDate}</td>\n      <td>{r.so}</td>                                         \n      <td>{r.site}</td>                                                \n      <td>{r.machines.Cador}</td>\n      <td>{r.machines.Permatic}</td>\n      <td>{r.machines.Perfekt}</td>\n      <td>{r.machines.Syntax}</td>\n      <td>{r.machines.Ympyrät}</td>\n      <td>{r.machines.Concept}</td>                                           \n      <td>{r.machines.MiniSyntax}</td>\n      <td>{r.machines.Format}</td>\n      <td>{r.machines.Progress}</td>\n    </tr>\n  )\n}\n\nconst printOneOrderLineNodate = (r) => {\n  return(\n    <tr key={r.so}> \n      <td>{''}</td>\n      <td>{r.so}</td>                                          \n      <td>{r.site}</td>                                              \n      <td>{r.machines.Cador}</td>\n      <td>{r.machines.Permatic}</td>\n      <td>{r.machines.Perfekt}</td>\n      <td>{r.machines.Syntax}</td>\n      <td>{r.machines.Ympyrät}</td>\n      <td>{r.machines.Concept}</td>                                           \n      <td>{r.machines.MiniSyntax}</td>\n      <td>{r.machines.Format}</td>\n      <td>{r.machines.Progress}</td>\n    </tr>\n  )\n}\n\nconst printOneDayTotalWeightByMachineLine = (day, data) => {\n  let allMachines = {Cador:null, Permatic:null, Perfekt:null, Syntax:null, Ympyrät:null, Concept:null, MiniSyntax:null, Format:null, Progress:null}\n  for(let i = 0; i<data.length; i++){\n    if(data[i].lDate.includes(day)){  \n      for(let c = 0; c<Object.keys(data[i].machines).length; c++){\n        allMachines[Object.keys(data[i].machines)[c]] += data[i].machines[Object.keys(data[i].machines)[c]]\n      }\n    }\n  }\n  return(\n    <tr className=\"sumLine\" key={day}> \n      <td>{''}</td>\n      <td>{''}</td>                                         \n      <td>{''}</td>                                                \n      <td>{allMachines.Cador}</td>\n      <td>{allMachines.Permatic}</td>\n      <td>{allMachines.Perfekt}</td>\n      <td>{allMachines.Syntax}</td>\n      <td>{allMachines.Ympyrät}</td>\n      <td>{allMachines.Concept}</td>                                           \n      <td>{allMachines.MiniSyntax}</td>\n      <td>{allMachines.Format}</td>\n      <td>{allMachines.Progress}</td>\n    </tr>\n  )\n}\n\nconst createOrderObjects = (data) => {\n  let orderObjects = []\n  orderObjects[0] = {\n    so: data[0].order_id,\n    lDate: data[0].loading_date,\n    site: data[0].building_site,\n    machines: {\n      [data[0].machine]: data[0].weight_kg,\n    }\n  }\n\n  for(let i = 1; i < data.length; i++){\n    for(let c = 0; c < orderObjects.length; c++){\n      if(data[i].order_id === orderObjects[c].so){\n        if(Object.keys(orderObjects[c].machines).includes(data[i].machine_name)){\n          orderObjects[c].machines[data[i].machine_name] += data[i].weight_kg\n        }else{\n          orderObjects[c].machines[data[i].machine_name] = data[i].weight_kg\n        }\n        break\n      }\n      if(c === orderObjects.length - 1){\n        orderObjects = orderObjects.concat({\n          so: data[i].order_id,\n          lDate: data[i].loading_date,\n          site: data[i].building_site,\n          machines: {\n            [data[i].machine_name]: data[i].weight_kg\n          }\n        })\n        c++\n      }\n    }\n  }\n  orderObjects = orderObjects.sort((a,b) => a.lDate.replaceAll('-','') -b.lDate.replaceAll('-',''))\n  return orderObjects\n}\n\nconst Body = ({orderObjects}) => {\n  let rivit = []\n  rivit[0] = printOneOrderLine(orderObjects[0])\n\n  for(let i = 1; i<orderObjects.length;i++){\n    if(orderObjects[i].lDate !== orderObjects[i-1].lDate){\n      rivit = rivit.concat(printOneDayTotalWeightByMachineLine(orderObjects[i-1].lDate, orderObjects))\n    }\n    if(orderObjects[i].lDate === orderObjects[i-1].lDate){\n    rivit = rivit.concat(printOneOrderLineNodate(orderObjects[i]))\n    }else{\n      rivit=rivit.concat(printOneOrderLine(orderObjects[i]))\n    }\n    if( i === orderObjects.length-1){\n      rivit = rivit.concat(printOneDayTotalWeightByMachineLine(orderObjects[i].lDate, orderObjects))\n    }\n  }\n  return rivit\n}\n\nconst Show = ({data}) => {\n  if(data.length>1){\n    data.forEach(e => {\n      if(e.machine_name.includes('Mini S')){e.machine_name = 'MiniSyntax'}\n      if(e.machine_name.includes('Perf')){e.machine_name = 'Perfekt'}\n      if(e.machine_name.includes('ine')){e.machine_name = 'Syntax'}  \n      if(e.machine_name.includes('iraa')){e.machine_name = 'Ympyrät'}\n      if(e.machine_name.includes('adius')){e.machine_name = 'Ympyrät'}\n\n    })\n  \n    let orderObjects = createOrderObjects(data)\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th width=\"7%\">PVM</th><th width=\"7%\">Tilausnro</th><th width=\"15%\">Kohde</th><th>Cador</th><th>Tupla</th><th>Pöytä</th><th>Syntax Line</th>\n            <th>Ympyrät</th><th>Concept</th><th>Mini Syntax</th><th>Format</th><th>Progress</th>   \n          </tr>\n        </thead>\n        <tbody>\n          <Body orderObjects={orderObjects}/>\n        </tbody>\n      </table>\n    )\n  }\n  return 'Ladataan...'\n}\n\nconst App = () => {\n\n  const [data,setData] = useState([])\n\n  useEffect(() => {\n    setInterval(() => {\n    axios\n    .get('http://s237-0075:3005/indalgo/management/optimizer/get_table_data/pending_production')\n    .then(res =>{setData(res.data) \n          console.log(new Date())})\n    },20000)\n    }      \n  ,[])\n\n  return(\n    <div>\n      <h1>Pending Production</h1>\n      <Show data={data}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}